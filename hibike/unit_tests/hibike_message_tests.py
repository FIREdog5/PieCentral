"""
Unit tests for functions in hibike_message.
"""


import unittest
import random

import hibike_message


def test_with_random_data(func, arg_func, kwarg_func=lambda: {}, times=5, *args, **kwargs):
    """
    Test FUNC with random arguments generated by ARG_FUNC and KWARG
    func, repeating TIMES.
    """
    for _ in range(times):
        func(*args, *arg_func(), **kwargs, **kwarg_func())


def gen_cobs_data():
    """
    Generate COBS-encodable data of a random length.
    """
    data_len = random.randrange(255)
    data = bytearray()

    for _ in range(data_len):
        data.append(random.randrange(256))

    return data

class CobsTests(unittest.TestCase):
    """
    Tests for COBS encoding and decoding.
    """
    def test_encode_decode(self):
        """
        Test basic functionality of cobs_encode/decode.
        """
        def assert_encode_decode_equal(data):
            """
            Check to make sure encode(decode) is idempotent.
            """
            encoded = hibike_message.cobs_encode(data)
            decoded = hibike_message.cobs_decode(encoded)
            self.assertEqual(data, decoded,
                             "{} encoded incorrectly".format(data))
        test_with_random_data(assert_encode_decode_equal, gen_cobs_data, times=100)